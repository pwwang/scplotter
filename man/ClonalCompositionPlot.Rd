% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clonalcompositionplot.R
\name{ClonalCompositionPlot}
\alias{ClonalCompositionPlot}
\title{ClonalCompositionPlot}
\usage{
ClonalCompositionPlot(
  data,
  clone_call = "aa",
  chain = "both",
  method = c("homeostasis", "homeo", "rel", "top", "rare"),
  clone_split = NULL,
  scale = TRUE,
  facet_by = NULL,
  group_by = NULL,
  split_by = NULL,
  xlab = NULL,
  ylab = NULL,
  plot_type = c("bar", "ring", "box", "violin"),
  order = list(),
  ...
)
}
\arguments{
\item{data}{The product of \link[scRepertoire:combineTCR]{scRepertoire::combineTCR}, \link[scRepertoire:combineTCR]{scRepertoire::combineTCR}, or
\link[scRepertoire:combineExpression]{scRepertoire::combineExpression}.}

\item{clone_call}{How to call the clone - VDJC gene (gene), CDR3 nucleotide (nt),
CDR3 amino acid (aa), VDJC gene + CDR3 nucleotide (strict) or a custom variable
in the data}

\item{chain}{indicate if both or a specific chain should be used - e.g. "both",
"TRA", "TRG", "IGH", "IGL"}

\item{method}{The method of plot to use. Default is "homeostasis".
Possible values are "homeostasis", "homeo", "rel", "top", and "rare".
\itemize{
\item "homeostasis" - Plot the homeostasis/relative abundance of the clones. The \code{clone_split} will
be the fraction of the clones in each sample.
\item "homeo" - Same as "homeostasis".
\item "rel" - Same as "homeostasis".
\item "top" - Plot the top clones. The \code{clone_split} will be indexes to cut the clones.
\item "rare" - Plot the rare clones. The \code{clone_split} will be the clone sizes.
}}

\item{clone_split}{The split for the clones. Default is NULL.
\itemize{
\item For "homeostasis", "homeo", "rel" - Default is \code{list(Rare = 1e-04, Small = 0.001, Medium = 0.01, Large = 0.1, Hyperexpanded = 1)}.
\item For "top" - Default is \code{c(10, 100, 1000, 10000, 30000, 100000)}.
\item For "rare" - Default is \code{c(1, 3, 10, 30, 100)}.
}}

\item{scale}{Whether to scale the values on the y-axis. Default is TRUE.
\itemize{
\item TRUE: The values of each group (on the x-axis) will be scaled to 1.
\item FALSE: No scaling.
\item "sample"/"Sample": The values in each sample will be scaled to 1.
}}

\item{facet_by}{The column name in the meta data to facet the plots. Default: NULL}

\item{group_by}{The column name in the meta data to group the cells. Default: NULL}

\item{split_by}{The column name in the meta data to split the plots. Default: NULL}

\item{xlab}{The x-axis label. Default is NULL.}

\item{ylab}{The y-axis label. Default is NULL.}

\item{plot_type}{The type of plot to use. Default is "bar".
Possible values are "bar", "ring", "box", and "violin".}

\item{order}{The order of the x-axis items or groups. Default is an empty list.
It should be a list of values. The names are the column names, and the values are the order.}

\item{...}{Other arguments passed to the specific plot function.
\itemize{
\item For \code{bar} plot, see \code{\link[plotthis:barplot]{plotthis::BarPlot()}}.
\item For \code{ring} plot, see \code{\link[plotthis:RingPlot]{plotthis::RingPlot()}}.
\item For \code{box} plot, see \code{\link[plotthis:boxviolinplot]{plotthis::BoxPlot()}}.
\item For \code{violin} plot, see \code{\link[plotthis:boxviolinplot]{plotthis::ViolinPlot()}}.
}}
}
\value{
A ggplot object or a list if \code{combine} is FALSE
}
\description{
Plot the composition of the clones in different samples/groups.
}
\examples{
\donttest{
set.seed(8525)
data(contig_list, package = "scRepertoire")
data <- scRepertoire::combineTCR(contig_list,
    samples = c("P17B", "P17L", "P18B", "P18L", "P19B","P19L", "P20B", "P20L"))
data <- scRepertoire::addVariable(data,
    variable.name = "Type",
    variables = rep(c("B", "L"), 4)
)
data <- scRepertoire::addVariable(data,
    variable.name = "Subject",
    variables = rep(c("P17", "P18", "P19", "P20"), each = 2)
)

ClonalCompositionPlot(data)
ClonalCompositionPlot(data, method = "top")
ClonalCompositionPlot(data, plot_type = "ring")
ClonalCompositionPlot(data, group_by = "Type", plot_type = "box", comparison = TRUE,
 clone_split = list(Small = 0.001, Medium = 0.01, Large = 0.1, Hyperexpanded = 1))
ClonalCompositionPlot(data, group_by = "Type", plot_type = "violin", add_box = TRUE,
 add_bg = TRUE)
ClonalCompositionPlot(data, method = "rare")
}
}
